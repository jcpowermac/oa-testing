---
- name: Create machineset_name
  set_fact:
    machineset_name: "{{ item.metadata.name ~ '-centos'}}"

- name: Update machineset definition
  set_fact:
    machineset: "{{ item | combine(dict_edit, recursive=True) }}"
  vars:
    dict_edit:
      metadata:
        name: "{{ machineset_name }}"
        resourceVersion: ""
      spec:
        selector:
          matchLabels:
            machine.openshift.io/cluster-api-machineset: "{{ machineset_name }}"
        template:
          metadata:
            labels:
              machine.openshift.io/cluster-api-machineset: "{{ machineset_name }}"
          spec:
            providerSpec:
              value:
                ami:
                  id: "{{ aws_ami }}"
                keyName: "libra"

- name: Import machineset definition
  k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    definition: "{{ machineset | to_yaml }}"

- name: wait for machine to be created
  k8s_facts:
    api_version: machine.openshift.io/v1beta1
    kubeconfig: "{{ kubeconfig_path }}"
    namespace: openshift-machine-api
    kind: Machine
    label_selectors:
    - "machine.openshift.io/cluster-api-machineset={{ machineset_name }}"
  register: new_machine
  retries: 36
  delay: 5
  until:
  - new_machine.resources is defined
  - new_machine.resources | length > 0
  - new_machine.resources[0].status is defined
  - new_machine.resources[0].status.providerStatus is defined
  - new_machine.resources[0].status.providerStatus.instanceState is defined
  - new_machine.resources[0].status.providerStatus.instanceState == 'running'

- name: Add hostname to new_workers_list
  set_fact:
    new_workers_list: "{{ new_workers_list + [ new_machine.resources[0].status.addresses | selectattr('type', 'match', '^InternalDNS$') | map(attribute='address') | first ] }}"
