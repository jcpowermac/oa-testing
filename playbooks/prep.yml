---
- name: Prep Playbook
  hosts: all
  gather_facts: false
  any_errors_fatal: true

  handlers:
  - import_tasks: handlers/main.yml

  vars:
    openshift_service_type_dict:
      origin: origin
      openshift-enterprise: atomic-openshift
    openshift_service_type: "{{ openshift_service_type_dict[openshift_deployment_type] }}"
    latest_version: '3.10'
    build_version: "{{ lookup('env', 'OPT_PREP_BUILD_VERSION') | default('latest', true) }}"

  tasks:
  # The token expires every 30 days so make sure it still works
  - name: Validate oreg_auth_password (~/openshift_creds.txt)
    command: oc login https://api.reg-aws.openshift.com --token={{ oreg_auth_password }}
    delegate_to: localhost
    run_once: true
    changed_when: false
    when: oreg_auth_password is defined

  - name: Set prep_version using openshift_release if defined
    set_fact:
      prep_version: "{{ openshift_release | regex_replace('^.(\\d+\\.\\d+).*', '\\1') }}"
    when:
      - openshift_release is defined

  - name: Set prep_version using openshift_pkg_version if defined
    set_fact:
      prep_version: "{{ openshift_pkg_version | regex_replace('^.(\\d+\\.\\d+).*', '\\1') }}"
    when:
      - prep_version is not defined
      - openshift_pkg_version is defined

  - name: Set prep_version using openshift_image_tag if defined
    set_fact:
      prep_version: "{{ (openshift_image_tag | regex_replace('^.(\\d+\\.\\d+).*', '\\1')) if openshift_image_tag != 'latest' else omit }}"
    when:
      - prep_version is not defined
      - openshift_image_tag is defined

  - name: Set prep_version to latest if no version provided
    set_fact:
      prep_version: "{{ latest_version }}"
    when:
      - prep_version is not defined

  - include_tasks: tasks/wait_for_hosts.yml

# Uninstall and clean up docker installation because we don't use these images
# Copying/Moving images during container_runtime role (for crio) takes a long
#  - name: Uninstall docker
#    package:
#      name: docker
#      state: absent
#
#  - name: Remove /var/lib/docker
#    file:
#      path: /var/lib/docker
#      state: absent

  - name: Make tmp repo directory
    tempfile:
      state: directory
    register: repo_temp

  - name: Move all the repo files to tmp
    shell: mv /etc/yum.repos.d/*.repo {{ repo_temp.path }}

  - name: Create OCP devel repos
    include_tasks: tasks/devel_repos.yml
    when: not (lookup('env', 'OPT_PREP_USE_RHN') | default(false) | bool)

  - name: Subscribe and enable OCP release repos
    include_tasks: tasks/rhn_repos.yml
    when: lookup('env', 'OPT_PREP_USE_RHN') | default(false) | bool

  - meta: flush_handlers

  - name: Get available RPM version(s)
    repoquery:
      name: "{{ openshift_service_type }}"
      ignore_excluders: true
      show_duplicates: true
    register: repoquery_results

  - name: Display available RPM versions
    debug:
      var: repoquery_results.results.versions.available_versions_full
